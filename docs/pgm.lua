-- Lua start
--[[
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–±–∏—Ä–∞–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã markdown –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏ –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω–µ—Ü
–ø–∞–≥–∏–Ω–∞—Ü–∏—é –ø–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ñ–∞–π–ª–∞–º.
--]]
PathToFolder = "/Users/ibo7/web/docs.a374.ru/docs/"
Fpath = PathToFolder
Backward = "readme.md"
Forward = "readme.md"
Azbuka = { "az", "buki", "vedi", "glagol", "dobro", "esty", "givite", "zemlya", "zelo", "ige", "-i", "kakw", "ludie",
    "mislete", "nash", "on", "omega", "pokoy", "rci", "slovo", "tverdo", "uk", "fert", "her", "ot", "cii",
    "cherv", "sha", "shy", "er", "eri", "ery", "you", "ya", "us", "ksi", "psi", "w", "fita", "igica" }
Tbl = {}
Ys = 0;
Ye = 0

function Fazbuka(np)
    for _, value in pairs(Azbuka) do
        -- S:S ????? –Ω–µ —Ä–∞–±–æ—Ç–∞–µ —É—Å–ª–æ–≤–∏–µ
        if string.find(np, value) ~= nil then
            return true
        elseif np == "README.md" or np == "readme.md" then
            return true
        end
    end
end

local table_md = {}
for line in io.popen("ls " .. PathToFolder, "r"):lines() do
    if string.sub(line, -3) == ".md" then
        -- print(#t + 1 .. " ‚Äì " .. line)
        if Fazbuka(line) then
            table_md[#table_md + 1] = line -- —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞—é–ª–∏—Ü—ã –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ markdown
        end
    end
end

for index, namePage in ipairs(table_md) do
    print("–§–ê–ô–õ ==-----------------=-> " .. namePage)

    -- S:S –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —É–¥–æ–±–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–∞–µ–º—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤


    Fpath = PathToFolder .. namePage

    -- init pagination references
    if index ~= 1 then
        Backward = table_md[index - 1]
    end
    if index ~= #table_md then
        Forward = table_md[index + 1]
    else
        Forward = "navi-page.md"
    end
    if table_md[index + 1] == "readme.md" then
        Forward = table_md[index + 2]
    end
    if table_md[index - 1] == "readme.md" then
        Backward = table_md[index-2]
    end
    ---[[
    if namePage == "README.md" or namePage == "readme.md" then
        Backward = "#"
        Forward = table_md[1]
    end
    -- ]]

    ------- 01.–ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞ ------------------

    File = io.open(Fpath, "r")

    --  Cleaning the table of previos data
    Tbl = {}

    for lf in File:lines() do
        if lf ~= nil then
            table.insert(Tbl, lf)
        end
    end

    File:close()

    print('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Ñ–∞–π–ª–µ: ', #Tbl, "\n")

    ------ 02. –ü–æ–∏—Å–∫ –º–º–µ—Ç–æ–∫ ---------------------------
    for i, v in pairs(Tbl) do
        if string.find(v, "ystm_start") then
            print(string.format("–ù–∞–π–¥–µ–Ω–æ –≤ –ª–∏–Ω–∏–∏: %i, –º–µ—Ç–∫–∞: %s", i, v))
            Ys = i
        end

        if string.find(v, "ystm_end") then
            print(string.format("–ù–∞–π–¥–µ–Ω–æ –≤ –ª–∏–Ω–∏–∏: %i, –º–µ—Ç–∫–∞ %s", i, v))
            Ye = i
        end
    end

    ---------- 03. –í –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É ---------------

    NewTbl = {}
    for key, value in pairs(Tbl) do
        -- –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –≤ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É,
        -- –∏—Å–∫–ª—é—á–∞—è —Å—Ç—Ä–æ–∫–∏ –º–µ—Ç–∫–∏ –∏ —á—Ç–æ –º–µ–∂–¥—É –Ω–∏–º–∏.
        if key < Ys or key > Ye then
            table.insert(NewTbl, value)
        end
    end

    ----------- 04. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ markdown ---------

    File2 = io.open(Fpath, "w")

    for _, value in pairs(NewTbl) do
        File2:write(value, "\n")
    end

    -- ===================================
    -- ===================================
    -- –®–∞–±–ª–æ–Ω –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è —Ñ–∞–π–ª–æ–≤ `markdown`

    ---[[
    Template = "<!--ystm_start-->\n<br>\n\n |||| \n |:---|:---:|---:| \n [‚Üê –Ω–∞–∑–∞–¥](" .. Backward ..
        ")|[ üîù ](#)|[–¥–∞–ª–µ–µ ‚Üí](" .. Forward .. ") \n\n <br>\n<!--ystm_end-->\n"
    --]]
    -- Template = ""

    -- ===================================
    -- ===================================

    File2:write(Template)

    File2:close()

    File = io.open(Fpath, "r")
    -- f:write(Template)
    File:seek("set", 0)
    print("\n\n–ö–û–ù–¢–ï–ù–¢ –§–ê–ô–õ–ê\n")
    print(File:read("*a"))

    File:close()
end

for _, value in pairs(table_md) do
    print(value)
end

print("\n\t THE END !!!\n\n")
